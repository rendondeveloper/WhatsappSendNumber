import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:whatsappsendnumber/core/db/data_base/data_base.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/data/data_source/notification_data/phone_number_data_source.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/data/phone_number_local_repository.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/framework/data/implementation/phone_number_data_source_impl.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/usescase/delete_all_phone_number_uses_case.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/usescase/delete_item_phone_number_uses_case.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/usescase/get_phone_number_uses_case.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/usescase/save_phone_number_uses_case.dart';final dataBaseProvider = Provider((provider) => DataBaseLocal());final phoneNumberDataDataSourceProvider =    Provider<PhoneNumberDataDataSource>((provider) => PhoneNumberDataDataSourceImpl(provider.watch(dataBaseProvider)));final phoneNumberRepositoryProvider = Provider<PhoneNumberRepository>((provider) =>    PhoneNumberRepository(provider.watch(phoneNumberDataDataSourceProvider)));final deleteAllPhoneNumberUsesCasesProvider = Provider<DeleteAllPhoneNumberUsesCases>((provider) =>    DeleteAllPhoneNumberUsesCases(provider.watch(phoneNumberRepositoryProvider)));final deleteItemPhoneNumberUsesCasesProvider = Provider<DeleteItemPhoneNumberUsesCases>((provider) =>    DeleteItemPhoneNumberUsesCases(provider.watch(phoneNumberRepositoryProvider)));final getPhoneNumberUsesCasesProvider = Provider<GetPhoneNumberUsesCases>((provider) =>    GetPhoneNumberUsesCases(provider.watch(phoneNumberRepositoryProvider)));final savePhoneNumberUsesCasesProvider = Provider<SavePhoneNumberUsesCases>((provider) =>    SavePhoneNumberUsesCases(provider.watch(phoneNumberRepositoryProvider)));