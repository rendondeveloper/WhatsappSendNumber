import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:whatsappsendnumber/core/db/features/country_data_base/data_base/country_daba_base_impl.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/framework/di/notifications_di.dart';import 'package:whatsappsendnumber/features/splash/framework/di/splash_di.dart';import 'package:whatsappsendnumber/features/start_chat/data/data_source/country_data_source.dart';import 'package:whatsappsendnumber/features/start_chat/data/repository/country_repository.dart';import 'package:whatsappsendnumber/features/start_chat/framework/data/implementation/data_source/country_data_source_impl.dart';import 'package:whatsappsendnumber/features/start_chat/framework/data/implementation/data_source/mapper/map_country_dto_to_country_model.dart';import 'package:whatsappsendnumber/features/start_chat/framework/presentation/page/ui_models/start_chat_state.dart';import 'package:whatsappsendnumber/features/start_chat/framework/presentation/provider/mapper/map_country_model_to_country_state.dart';import 'package:whatsappsendnumber/features/start_chat/framework/presentation/provider/start_chat_provider.dart';import 'package:whatsappsendnumber/features/start_chat/use_cases/get_countries_use_cases.dart';final countryDataBaseImplProvider = Provider<CountryDataBaseImpl>((provider) => CountryDataBaseImpl(provider.read(dataBaseProvider)));final mapCountryDtoToCountryModelProvider = Provider<MapCountryDtoToCountryModel>((provider) => MapCountryDtoToCountryModel());final countriesDataSourceImplProvider = Provider<CountryDataSource>(    (provider) => CountryDataSourceImpl(provider.read(countryDataBaseImplProvider), provider.read(mapCountryDtoToCountryModelProvider)));final countryRepositoryProvider = Provider<CountryRepository>((provider) => CountryRepository(provider.read(countriesDataSourceImplProvider)));final getCountriesUseCasesProvider = Provider<GetCountryUseCases>((provider) => GetCountryUseCases(provider.read(countryRepositoryProvider)));final mapCountryModelCountryStateProvider = Provider<MapCountryModelCountryState>((provider) => MapCountryModelCountryState());final sendMessageProvider = StateNotifierProvider.autoDispose<SendMessageProvider, StartChatState>((provider) {  return SendMessageProvider(provider.read(savePhoneNumberUsesCasesProvider), provider.read(analyticsSenderEventsProvider),      provider.read(getCountriesUseCasesProvider), provider.read(mapCountryModelCountryStateProvider));});