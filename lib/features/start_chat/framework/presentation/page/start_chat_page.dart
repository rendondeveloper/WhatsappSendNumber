import 'package:flutter/material.dart';import 'package:flutter/scheduler.dart';import 'package:flutter/services.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:url_launcher/url_launcher.dart';import 'package:whatsappsendnumber/core/analitycs/analytics_constants.dart';import 'package:whatsappsendnumber/features/start_chat/framework/di/start_chat_di.dart';import 'package:whatsappsendnumber/features/start_chat/framework/presentation/delegate/search_country_delegate.dart';import 'package:whatsappsendnumber/features/start_chat/framework/presentation/page/ui_models/start_chat_state.dart';import 'package:whatsappsendnumber/resources/dimens_app.dart';import 'package:whatsappsendnumber/resources/extensions/extension_context.dart';class StartChatPage extends ConsumerStatefulWidget {  const StartChatPage({super.key});  @override  ConsumerState<ConsumerStatefulWidget> createState() => _StartChatPage();}class _StartChatPage extends ConsumerState<StartChatPage> {  final _formKey = GlobalKey<FormState>();  final _phoneNumberController = TextEditingController();  @override  void initState() {    super.initState();    SchedulerBinding.instance.addPostFrameCallback((timeStamp) async {      ref.watch(startChatProvider.notifier).addListener((state) {        if (state.numberToLaunch.isNotEmpty) {          launch(state.numberToLaunch);        }      });    });  }  @override  Widget build(BuildContext context) {    return Column(      mainAxisAlignment: MainAxisAlignment.center,      children: [        Container(          margin: const EdgeInsets.symmetric(horizontal: doubleSeparation),          width: MediaQuery.of(context).orientation == Orientation.portrait              ? MediaQuery.of(context).size.width              : MediaQuery.of(context).size.width * .80,          child: Row(            mainAxisAlignment: MainAxisAlignment.start,            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Expanded(                  flex: 1,                  child: StreamBuilder(                      stream: ref.watch(startChatProvider.notifier).stream,                      builder: (context, snapshot) {                        final state = snapshot.hasData ? (snapshot.data as StartChatState) : const StartChatState();                        return InkWell(                            onTap: () {                              ref.read(startChatProvider.notifier).onEvent(AnalyticsConstants.pageTabSendMessageSelectionCountry);                              showSearch(                                context: context,                                delegate: SearchCountryDelegate(ref.read(startChatProvider).countries, (country) {                                  ref.read(startChatProvider.notifier).onEvent(AnalyticsConstants.pageTabSendMessageUpdateCountry);                                  ref.read(startChatProvider.notifier).onEvent(AnalyticsConstants.pageTabSendMessageSelectedCountry);                                  ref.read(startChatProvider.notifier).updateCountryCurrent(country);                                }),                              );                            },                            child: Container(                                padding: const EdgeInsets.symmetric(vertical: 21.0),                                decoration: BoxDecoration(                                    border: Border.all(                                      color: Theme.of(context).errorColor,                                      width: 0.8,                                    ),                                    borderRadius: const BorderRadius.all(Radius.circular(radiusBig))),                                child: Center(                                  child: Text(                                    state.country.code,                                    style: Theme.of(context).textTheme.titleSmall?.copyWith(color: Theme.of(context).errorColor),                                    textAlign: TextAlign.center,                                  ),                                )));                      })),              const SizedBox(width: simpleSmallSeparation),              Expanded(                flex: 6,                child: Form(                    key: _formKey,                    child: TextFormField(                      controller: _phoneNumberController,                      keyboardType: TextInputType.phone,                      textAlign: TextAlign.start,                      textInputAction: TextInputAction.done,                      maxLength: 10,                      maxLines: 1,                      inputFormatters: <TextInputFormatter>[FilteringTextInputFormatter.digitsOnly],                      validator: (value) {                        if (value == null || value.length < 10) {                          ref.read(startChatProvider.notifier).onEvent(AnalyticsConstants.pageTabSendMessageErrorWriteNumber);                          return context.strings().sendMessagePageInputPhoneError;                        }                        return null;                      },                      decoration: InputDecoration(                        counter: const Offstage(),                        hintText: context.strings().sendMessagePageInputPhone,                        border: OutlineInputBorder(                          borderRadius: BorderRadius.circular(radiusBig),                        ),                      ),                    )),              ),            ],          ),        ),        const SizedBox(height: doubleSeparation),        Container(          margin: const EdgeInsets.symmetric(horizontal: doubleSeparation),          width: MediaQuery.of(context).orientation == Orientation.portrait              ? MediaQuery.of(context).size.width              : MediaQuery.of(context).size.width * .80,          child: ElevatedButton(            onPressed: () {              if (_formKey.currentState!.validate()) {                ref.read(startChatProvider.notifier).onEvent(AnalyticsConstants.pageTabSendMessageOpenChat);                ref.read(startChatProvider.notifier).launchChat(_phoneNumberController.text);                FocusScope.of(context).unfocus();                _phoneNumberController.clear();              }            },            child: Text(context.strings().sendMessagePageButtonSendStartChat),          ),        ),      ],    );  }}