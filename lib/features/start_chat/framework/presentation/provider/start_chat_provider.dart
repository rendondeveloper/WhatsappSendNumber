import 'dart:io';import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:whatsappsendnumber/core/analitycs/analytics_constants.dart';import 'package:whatsappsendnumber/core/analitycs/analytics_sender_events.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/framework/data/config/model/number_phone_local.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/usescase/save_phone_number_uses_case.dart';import 'package:whatsappsendnumber/features/start_chat/framework/presentation/page/ui_models/country_state.dart';import 'package:whatsappsendnumber/features/start_chat/framework/presentation/page/ui_models/start_chat_state.dart';import 'package:whatsappsendnumber/features/start_chat/framework/presentation/provider/mapper/map_country_model_to_country_state.dart';import 'package:whatsappsendnumber/features/start_chat/use_cases/get_countries_use_cases.dart';import 'package:whatsappsendnumber/features/start_chat/use_cases/get_country_current_use_cases.dart';import 'package:whatsappsendnumber/features/start_chat/use_cases/update_country_current_use_cases.dart';import 'package:whatsappsendnumber/resources/extensions/extension_string.dart';import 'package:whatsappsendnumber/resources/strings_app.dart';class StartChatProvider extends StateNotifier<StartChatState> {  final AnalyticsSenderEvents _analyticsSenderEvents;  final SavePhoneNumberUsesCases _saveNumberPhoneUesCase;  final GetCountryCurrentUseCases _getCountryUseCases;  final GetCountriesUseCases _getCountriesUseCases;  final UpdateCountryCurrentUseCases _updateCurrentCountryUseCases;  final MapCountryModelCountryState _mapCountryModelCountryState;  StartChatProvider(this._saveNumberPhoneUesCase, this._analyticsSenderEvents, this._getCountryUseCases, this._mapCountryModelCountryState,      this._getCountriesUseCases, this._updateCurrentCountryUseCases)      : super(const StartChatState()) {    _sendScreen();    _getCountry();    _getCountries();  }  Future<void> launchChat(String phoneNumber) async {    _saveNumberPhoneUesCase.invoke(PhoneNumberLocal(identifier: 0, number: phoneNumber, date: DateTime.now().toConvertDMMYYYY()));    state = state.copyWith(numberToLaunch: "${Platform.isAndroid ? urlWhatsAppAndroid : urlWhatsAppAndroidIos}${state.country.code}$phoneNumber");    state = state.copyWith(numberToLaunch: "");  }  void onEvent(String event) {    _analyticsSenderEvents.onEvent(AnalyticsConstants.pageTabHistoryEvent, parameters: {AnalyticsConstants.pageTabHistoryEventItem: event});  }  void _sendScreen() {    _analyticsSenderEvents.sendScreen(AnalyticsConstants.pageTabSendMessage);  }  void _getCountry() async {    final country = await _getCountryUseCases.invoke();    state = state.copyWith(country: _mapCountryModelCountryState.map(country));  }  void _getCountries() async {    final countries = await _getCountriesUseCases.invoke();    state = state.copyWith(countries: countries.map((item) => _mapCountryModelCountryState.map(item)).toList());  }  void updateCountryCurrent(CountryState countryState) async {    await _updateCurrentCountryUseCases.invoke(countryState.identifier);    _getCountry();  }}