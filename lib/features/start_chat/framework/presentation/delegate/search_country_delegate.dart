import 'dart:io';import 'package:flutter/material.dart';import 'package:whatsappsendnumber/features/start_chat/framework/presentation/page/ui_models/country_state.dart';class SearchCountryDelegate extends SearchDelegate {  final List<CountryState> countries;  final Function(CountryState) onTapItem;  SearchCountryDelegate(this.countries, this.onTapItem);  @override  List<Widget> buildActions(BuildContext context) {    return [      IconButton(        icon: const Icon(Icons.clear),        onPressed: () {          query = '';        },      ),    ];  }  @override  Widget buildLeading(BuildContext context) {    return IconButton(      icon: Platform.isAndroid ? const Icon(Icons.arrow_back) : const Icon(Icons.arrow_back_ios),      onPressed: () {        _closeDialog(context);      },    );  }  @override  Widget buildResults(BuildContext context) {    return Container();  }  @override  Widget buildSuggestions(BuildContext context) {    final countriesSearch = query.isEmpty        ? countries        : countries            .where((element) =>                element.nameFull.toLowerCase().contains(query.toLowerCase()) ||                element.code.toLowerCase().contains(query.toLowerCase()) ||                element.codeIso2.toLowerCase().contains(query.toLowerCase()) ||                element.codeIso3.toLowerCase().contains(query.toLowerCase()))            .toList();    return ListView.builder(      itemBuilder: (context, index) => ListTile(        onTap: () {          if (query.isEmpty) {            onTapItem(countriesSearch[index]);            print("QUERY EMPTY index -> $index");            _closeDialog(context);          } else {            onTapItem(countriesSearch[index]);            print("QUERY NOT EMPTY index -> $index");            _closeDialog(context);          }        },        leading: Icon(query.isEmpty ? Icons.phone : Icons.search),        title: Text(            "${countriesSearch[index].nameFull} / ${countriesSearch[index].code} / ${countriesSearch[index].codeIso2} / ${countriesSearch[index].codeIso3}",            style: Theme.of(context).textTheme.labelLarge),      ),      itemCount: countriesSearch.length,    );  }  _closeDialog(BuildContext context) {    close(context, null);  }}