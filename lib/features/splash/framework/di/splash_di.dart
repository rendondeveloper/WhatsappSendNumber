import 'package:firebase_analytics/firebase_analytics.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:whatsappsendnumber/core/analitycs/analytics_initialization.dart';import 'package:whatsappsendnumber/core/analitycs/analytics_sender_events.dart';import 'package:whatsappsendnumber/features/splash/framework/page/models/splash_state.dart';import 'package:whatsappsendnumber/features/splash/framework/provider/splash_provider.dart';import 'package:whatsappsendnumber/features/splash/usescases/get_data_user_uses_case.dart';import 'package:whatsappsendnumber/features/splash/usescases/get_flow_after_splash.dart';final providerFirebase = Provider<FirebaseAnalytics>((provider) => FirebaseAnalytics.instance);final analyticsInitializationProvider = Provider<AnalyticsInitialization>((provider) => AnalyticsInitialization(provider.read(providerFirebase)));final analyticsSenderEventsProvider = Provider<AnalyticsSenderEvents>((provider) => AnalyticsSenderEventsImp(provider.read(providerFirebase)));final getFlowAfterSplashProvider = Provider<GetFlowAfterSplash>((provider) => GetFlowAfterSplash());final getDataUserUsesCasesProvider = Provider<GetDataUserUsesCases>((provider) => GetDataUserUsesCases());final splashProvider = StateNotifierProvider.autoDispose<SplashProvider, SplashState>((provider) {  return SplashProvider(    provider.read(getFlowAfterSplashProvider),    provider.read(getDataUserUsesCasesProvider),    provider.read(analyticsInitializationProvider),    provider.read(analyticsSenderEventsProvider),  );});