import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:whatsappsendnumber/core/analitycs/analytics_constants.dart';import 'package:whatsappsendnumber/core/analitycs/analytics_initialization.dart';import 'package:whatsappsendnumber/core/analitycs/analytics_sender_events.dart';import 'package:whatsappsendnumber/features/splash/framework/page/models/splash_state.dart';import 'package:whatsappsendnumber/features/splash/usescases/get_data_user_uses_case.dart';import 'package:whatsappsendnumber/features/splash/usescases/get_flow_after_splash.dart';class SplashProvider extends StateNotifier<SplashState> {  final GetFlowAfterSplash _getFlowAfterSplash;  final GetDataUserUsesCases _getDataUserUsesCases;  final AnalyticsInitialization _analyticsInitialization;  final AnalyticsSenderEvents _analyticsSenderEvents;  SplashProvider(    this._getFlowAfterSplash,    this._getDataUserUsesCases,    this._analyticsInitialization,    this._analyticsSenderEvents,  ) : super(const SplashState());  void setUp() {    _getDataUser();    _sendScreen();  }  void getNextFlow() {    final response = _getFlowAfterSplash.invoke();    state = state.copyWith(navigation: response);  }  void _getDataUser() async {    final user = await _getDataUserUsesCases.invoke();    print("USER -> $user");    _analyticsInitialization.setUser(user);  }  void _sendScreen() {    _analyticsSenderEvents.onEvent(AnalyticsConstants.pageSplashScreen);  }}