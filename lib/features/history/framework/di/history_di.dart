import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:whatsappsendnumber/core/db/features/get_url_launch_chat/get_url_lauch_chat_use_cases.dart';import 'package:whatsappsendnumber/core/db/features/number_phone_data_base/data_base/numbers_phone_daba_base_impl.dart';import 'package:whatsappsendnumber/features/history/data/data_source/phone_number_data_source.dart';import 'package:whatsappsendnumber/features/history/data/phone_number_local_repository.dart';import 'package:whatsappsendnumber/features/history/framework/data/implementation/data_source/phone_number_data_source_impl.dart';import 'package:whatsappsendnumber/features/history/framework/presentation/page/ui_models/history_state.dart';import 'package:whatsappsendnumber/features/history/framework/presentation/provider/history_provider.dart';import 'package:whatsappsendnumber/features/history/framework/presentation/provider/mapper/map_phone_number_local_to_phone_number_state.dart';import 'package:whatsappsendnumber/features/history/use_cases/delete_all_phone_number_uses_case.dart';import 'package:whatsappsendnumber/features/history/use_cases/delete_item_phone_number_uses_case.dart';import 'package:whatsappsendnumber/features/history/use_cases/get_phone_number_uses_case.dart';import 'package:whatsappsendnumber/features/history/use_cases/save_phone_number_uses_case.dart';import 'package:whatsappsendnumber/features/splash/framework/di/splash_di.dart';import 'package:whatsappsendnumber/resources/di/app_di.dart';final numbersPhoneImplProvider = Provider<NumbersPhoneImpl>((provider) => NumbersPhoneImpl(provider.read(dataBaseProvider)));final phoneNumberDataDataSourceProvider =    Provider<PhoneNumberDataDataSource>((provider) => PhoneNumberDataDataSourceImpl(provider.read(numbersPhoneImplProvider)));final phoneNumberRepositoryProvider =    Provider<PhoneNumberRepository>((provider) => PhoneNumberRepository(provider.read(phoneNumberDataDataSourceProvider)));final deleteAllPhoneNumberUsesCasesProvider =    Provider<DeleteAllPhoneNumberUsesCases>((provider) => DeleteAllPhoneNumberUsesCases(provider.read(phoneNumberRepositoryProvider)));final deleteItemPhoneNumberUsesCasesProvider =    Provider<DeleteItemPhoneNumberUsesCases>((provider) => DeleteItemPhoneNumberUsesCases(provider.read(phoneNumberRepositoryProvider)));final getPhoneNumberUsesCasesProvider =    Provider<GetPhoneNumberUsesCases>((provider) => GetPhoneNumberUsesCases(provider.read(phoneNumberRepositoryProvider)));final savePhoneNumberUsesCasesProvider =    Provider<SavePhoneNumberUsesCases>((provider) => SavePhoneNumberUsesCases(provider.read(phoneNumberRepositoryProvider)));final getUrlLauncherChatUseCasesProvider = Provider<GetUrlLauncherChatUseCases>((provider) => GetUrlLauncherChatUseCases());final mapPhoneNumberLocalToPhoneNumberStateProvider =    Provider<MapPhoneNumberLocalToPhoneNumberState>((provider) => MapPhoneNumberLocalToPhoneNumberState());final sendMessageProvider = StateNotifierProvider.autoDispose<HistoryProvider, HistoryState>((provider) {  return HistoryProvider(      provider.read(getPhoneNumberUsesCasesProvider),      provider.read(deleteItemPhoneNumberUsesCasesProvider),      provider.read(mapPhoneNumberLocalToPhoneNumberStateProvider),      provider.read(analyticsSenderEventsProvider),      provider.watch(getUrlLauncherChatUseCasesProvider));});