def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def compileSdkVersionApp = localProperties.getProperty('flutter.compileSdkVersionApp')
if (compileSdkVersionApp == null) {
    compileSdkVersionApp = '33'
}

def versionCodeApp = localProperties.getProperty('flutter.versionCodeApp')
if (versionCodeApp == null) {
    versionCodeApp = '1'
}

def versionNameApp = localProperties.getProperty('flutter.versionName')
if (versionNameApp == null) {
    versionNameApp = '0.0.1'
}

def minSdkVersionApp = localProperties.getProperty('flutter.minSdkVersionApp')
if (minSdkVersionApp == null) {
    minSdkVersionApp = '19'
}

def targetSdkVersionApp = localProperties.getProperty('flutter.targetSdkVersionApp')
if (targetSdkVersionApp == null) {
    targetSdkVersionApp = '33'
}

def buildToolsVersionApp = localProperties.getProperty('flutter.buildToolsVersionApp')
if (buildToolsVersionApp == null) {
    buildToolsVersionApp = "30.0.3"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion compileSdkVersionApp.toInteger()

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.whatsappsendnumber"
        minSdkVersion minSdkVersionApp.toInteger()
        targetSdkVersion targetSdkVersionApp.toInteger()
        versionCode versionCodeApp.toInteger()
        versionName versionNameApp
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "Instantiatable"
        checkReleaseBuilds false
        abortOnError false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.core:core-splashscreen:1.0.0-alpha02"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
