def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def compileSdkVersionApp = localProperties.getProperty('flutter.compileSdkVersionApp')
if (compileSdkVersionApp == null) {
    compileSdkVersionApp = '33'
}

def versionCodeApp = localProperties.getProperty('flutter.versionCodeApp')
if (versionCodeApp == null) {
    versionCodeApp = '1'
}

def versionNameApp = localProperties.getProperty('flutter.versionName')
if (versionNameApp == null) {
    versionNameApp = '0.0.1'
}

def minSdkVersionApp = localProperties.getProperty('flutter.minSdkVersionApp')
if (minSdkVersionApp == null) {
    minSdkVersionApp = '19'
}

def targetSdkVersionApp = localProperties.getProperty('flutter.targetSdkVersionApp')
if (targetSdkVersionApp == null) {
    targetSdkVersionApp = '33'
}

def buildToolsVersionApp = localProperties.getProperty('flutter.buildToolsVersionApp')
if (buildToolsVersionApp == null) {
    buildToolsVersionApp = "30.0.3"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion compileSdkVersionApp.toInteger()

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.kikedeveloper.whatsappsendnumber"
        minSdkVersion minSdkVersionApp.toInteger()
        targetSdkVersion targetSdkVersionApp.toInteger()
        versionCode versionCodeApp.toInteger()
        versionName versionNameApp
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "Instantiatable"
        checkReleaseBuilds false
        abortOnError false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-splashscreen:1.0.0-alpha02"
    implementation "androidx.core:core:1.5.0-alpha05"
    implementation "androidx.core:core-ktx:1.6.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation "androidx.core:core-animation:1.0.0-alpha02"
    implementation "androidx.interpolator:interpolator:1.0.0"
    implementation platform('com.google.firebase:firebase-bom:31.0.3')
    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.3.7'
    implementation 'com.google.firebase:firebase-analytics-ktx:21.2.2'
    implementation 'com.android.support:multidex:1.0.3'
    def appcompat_version = "1.3.1"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    // For loading and tinting drawables on older versions of the platform
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:2.1.0"
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
